#!/usr/bin/env python

import argparse
import trp
import json
from textracthelper.t_call import Textract_Features, call_textract
from textracthelper.t_pretty_print import Textract_Pretty_Print, get_string, get_tables_string

parser = argparse.ArgumentParser()
parser.add_argument("--input-document", help="s3 object (s3://) or file from local filesystem", required=True)
parser.add_argument("--features", nargs='+', type=str, choices=["FORMS", "TABLES"], help="")
parser.add_argument("--pretty-print", nargs='+', type=str, choices=["WORDS", "LINES", "FORMS", "TABLES"])
args = parser.parse_args()

input_document = args.input_document
features_arg = args.features
pretty_print_arg = args.pretty_print

features = None
if features_arg:
    features = [Textract_Features[x] for x in features_arg]

pretty_print = None
if pretty_print_arg:
    pretty_print = [Textract_Pretty_Print[x] for x in pretty_print_arg]

exit_code = 0
if "FORMS" in pretty_print_arg and (not features_arg or "FORMS" not in features_arg):
    print("should pretty-print FORMS but is not requested as --features")
    exit_code = 1
if "TABLES" in pretty_print_arg and (not features_arg or "TABLES" not in features_arg):
    print("should pretty-print TABLES but is not requested as --features")
    exit_code = 1
if exit_code > 0:
    exit(1)

if pretty_print:
    doc = trp.Document(json.loads(call_textract(input_document=input_document, features=features)))
    print(get_string(doc=doc, output_type=pretty_print))
else:
    print(call_textract(input_document=input_document, features=features))
